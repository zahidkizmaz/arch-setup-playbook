---
- name: Get config files from GitHub
  git:
    repo: "https://github.com/zahidkizmaz/dotfiles"
    dest: "~/Projects/dotfiles/"
    clone: true

- name: Create .config folder
  file:
    path: ~/.config/
    state: directory

- name: Create symlinks of config files
  command: chdir=~/Projects/dotfiles/ stow --adopt -RSt ~ {{ item }}
  loop: "{{ config_packages }}"

- name: Delete {{ ansible_user }} .bash_profile
  file:
    path: ~/.bash_profile
    state: absent

- name: Install zsh plugins
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    clone: true
  loop:
    -
      repo: https://github.com/zsh-users/zsh-autosuggestions
      dest: "~/.config/zsh/plugins/zsh-autosuggestions"
    -
      repo: https://github.com/zsh-users/zsh-syntax-highlighting
      dest: "~/.config/zsh/plugins/zsh-syntax-highlighting"

- name: Set zsh as default shell for {{ ansible_user }}
  command: chsh -s /usr/bin/zsh {{ ansible_user }}
  become: true

- name: Clean pipx packages
  command: pipx uninstall-all

- name: Install pipx packages
  command: pipx install {{ item }}
  loop: "{{ pipx_packages }}"

- name: Inject neovim and pylsp-mypy package to python-lsp-server env
  command: pipx inject python-lsp-server neovim pylsp-mypy

- name: Install tmux package manager TPM
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: ~/.tmux/plugins/tpm
    clone: true

- name: Install tmux packages
  command: ~/.tmux/plugins/tpm/bin/install_plugins

- name: Set up asdf-vm plugins
  shell:
    cmd: >
      source {{ zshrc_location }} &&
      asdf plugin add {{ item }} &&
      asdf install {{ item }} latest &&
      asdf global {{ item }} latest
    executable: /bin/zsh
  vars:
    zshrc_location: "~/Projects/dotfiles/zsh/.config/zsh/.zshrc"
  loop: "{{ vm_asdf_plugins }}"

- name: Install npm packages
  shell:
    cmd: >
      source {{ zshrc_location }} &&
      npm install -g {{ item }}
    executable: /bin/zsh
  loop: "{{ npm_packages }}"
  vars:
    zshrc_location: "~/Projects/dotfiles/zsh/.config/zsh/.zshrc"

- name: Install nvim packages
  shell:
    cmd: >
      source {{ zshrc_location }} &&
      nvim --headless -c 'autocmd User PackerComplete quitall' -c 'PackerSync'
    executable: /bin/zsh
  vars:
    zshrc_location: "~/Projects/dotfiles/zsh/.config/zsh/.zshrc"

- name: Install nvim treesitter grammars
  shell:
    cmd: >
      source {{ zshrc_location }} &&
      nvim --headless
      -c 'TSInstallSync all'
      -c 'autocmd User PackerComplete quitall'
      -c 'PackerSync'
      {{ zshrc_location }}
    executable: /bin/zsh
  vars:
    zshrc_location: "~/Projects/dotfiles/zsh/.config/zsh/.zshrc"
